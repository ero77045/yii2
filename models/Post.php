<?php

namespace app\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "posts".
 *
 * @property int $id
 * @property string $title
 * @property string $description
 * @property string|null $created_at
 *
 * @property PostHeading[] $postsHeadings
 */
class Post extends \yii\db\ActiveRecord
{
    public $heading_id;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'posts';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'description'], 'required'],
            [['created_at', 'heading_id'], 'safe'],
            [['title', 'description'], 'string', 'max' => 255],
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {
            $this->created_at = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert);
    }

    /**
     * Post constructor.
     */
    public function __construct()
    {
        $this->on(self::EVENT_AFTER_UPDATE, [$this, 'saveHeadings']);
        $this->on(self::EVENT_AFTER_INSERT, [$this, 'saveHeadings']);
    }

    /**
     *
     */
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'created_at' => 'Created At',
        ];
    }

    /**
     * @throws \Exception
     */
    public function saveHeadings()
    {
        $this->heading_id = \yii\helpers\Json::decode($this->heading_id);
        PostHeading::createAll($this->heading_id, $this->id);
    }

    /**
     * Gets query for [[PostsHeadings]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getPostsHeadings()
    {
        return $this->hasMany(PostHeading::class, ['post_id' => 'id']);
    }

    /**
     * @return array
     */
    public function getPostHeadingsIds()
    {
        $ids = ArrayHelper::getColumn($this->postsHeadings, 'heading_id', false);
        return array_combine($ids, $ids);
    }

    public function getPostHeadingsNames()
    {
        $names = ArrayHelper::getColumn($this->postsHeadings, 'heading.name', false);
        return implode(', ', $names);
    }
}
